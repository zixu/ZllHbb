//void fianl_step();
#include <TH1D.h>
#include <TH2D.h>
#include <TString.h>
#include <TROOT.h>
#include <iostream>
#include <TGraph.h>
#include <TMath.h>
#include <map>
#include "fstream"
#include <TLegend.h>


void runStep2Analyzer() {
    gROOT->LoadMacro("METzCalculator.cc++");
    gROOT->LoadMacro("Step2Analyzer.C++");
    gROOT->LoadMacro("tdrstyle.C");
    setTDRStyle(); //plotting style

    
    //runStep2Analyzer_signle("/home/wangq/CMS/whbb/ben/lhe/DiJetPt_Tbar_s-channel_TuneZ2star_8TeV-powheg-tauola");
    runStep2Analyzer_signle("DiJetPt_Tbar_s-channel_TuneZ2star_8TeV-powheg-tauola");
    //runStep2Analyzer_signle("Step2_ZHiggs0PH_M-125p6_8TeV-JHUGenV4-private");
    //runStep2Analyzer_signle("Step2_ZHiggs0M_M-125p6_8TeV-JHUGenV4-private");
    //runStep2Analyzer_signle("Step2_ZHiggs0Mf05ph0_M-125p6_8TeV-JHUGenV4-private");
    //runStep2Analyzer_signle("Step2_WHiggs0Mf05ph0_M-125p6_8TeV-JHUGenV4-private");
/*    TFile *fout =new TFile("hist.root","recreate");
    fout->mkdir("VHbb");
    fout->cd("VHbb");
    fout->Write();
    fout->Close();
*/
    }

void runStep2Analyzer_signle( TString samplename) 
{

    // mkdir plots fold accoding time
    TString dir = gSystem->UnixPathName(gInterpreter->GetCurrentMacroName());
    dir.ReplaceAll("runStep2Analyzer.C","");
    dir.ReplaceAll("/./","/");
    TDatime dt;

    char* plot_Dir_DateTime=Form("%sPlots/%i_%i_%i/%s_%i",dir.Data(), dt.GetYear(), dt.GetMonth(), dt.GetDay(), samplename.Data(), dt.GetTime());
    cout<<plot_Dir_DateTime<<endl;
    gSystem->mkdir(plot_Dir_DateTime, 1);

    //TFile *file1=new TFile("/home/wangq/CMS/whbb/ben/lhe/"+samplename+".root");
    TFile *file1=new TFile(samplename+".root");

    TTree *tree1=(TTree*) file1->Get("tree");
    if(tree1){

        Step2Analyzer* analyzor = new Step2Analyzer(tree1, plot_Dir_DateTime);
        analyzor->Loop();

    }else{
        cout<<"Error! Coundn't find a tree!!!"<<endl;
    }
    /*    TFile *fout =new TFile("hist.root","recreate");
          fout->mkdir("VHbb");
          fout->cd("VHbb");
          fout->Write();
          fout->Close();
          */
}
